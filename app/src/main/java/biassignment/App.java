/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package biassignment;

import java.io.File;
import java.io.FileReader;

import javax.imageio.ImageIO;

import org.apache.commons.lang3.time.StopWatch;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;

import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

import io.github.bonigarcia.wdm.WebDriverManager;
import ru.yandex.qatools.ashot.AShot;
import ru.yandex.qatools.ashot.Screenshot;
import ru.yandex.qatools.ashot.shooting.ShootingStrategies;

public class App {
	// method stub to create driver instance

	public static String readJson(String property) {
		try {
			JsonObject jsonObject = JsonParser.parseReader(new FileReader("./config.json")).getAsJsonObject();
			String object = jsonObject.get(property).getAsString();
			return object;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return "failed";
		}

	}

	public static WebDriver createDriver() {
		WebDriverManager.chromedriver().setup();
		WebDriver driver;
		ChromeOptions options = new ChromeOptions();
		options.addArguments("--headless", "--window-size=1920,1200");
		driver = new ChromeDriver(options);
		return driver;
	}

	public static void printQkartLoadingtime(WebDriver driver) {
		try {
			String url = readJson("QKART_URL");
			StopWatch stopWatch = new StopWatch();
			stopWatch.start();
			driver.get(url);
			stopWatch.stop();
			captureFullPageScreenshot(driver, "fullScrnSht", "HomePage");
			System.out.println("Time taken in seconds: " + stopWatch.getTime() / 1000);
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
	}

	public static void captureFullPageScreenshot(WebDriver driver, String type, String description) {
		try {
			File theDir = new File("/screenshots");
			if (!theDir.exists()) {
				theDir.mkdirs();
			}

			String timestamp = String.valueOf(java.time.LocalDateTime.now()).replace(':', '-');
			String fileName = String.format("screenshot_%s_%s_%s.png", timestamp, type, description);

			Screenshot as = new AShot().shootingStrategy(ShootingStrategies.viewportPasting(100)).takeScreenshot(driver);

			// TakesScreenshot scrShot = ((TakesScreenshot) driver);
			// File SrcFile = scrShot.getScreenshotAs(OutputType.FILE);
			String path = readJson("ScreenShotSaveLocation");
			File srcFile = new File(path + fileName);
			ImageIO.write(as.getImage(), "png", srcFile);
			String storedFilename = srcFile.getName();
			System.out.println("Screenshot saved as: " + storedFilename);

			// File DestFile = new File("screenshots/");
			// FileUtils.copyFile(srcFile, DestFile);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void GetProductImageandUrl(WebDriver driver, String productName) {
		try {
			String url = readJson("QKART_URL");
			driver.get(url);
			driver.findElement(By.name("search")).sendKeys(productName);
			Thread.sleep(1500);
			captureFullPageScreenshot(driver, "fullScrnSht", "products");
			String price = driver
					.findElement(
							By.xpath("//div[contains(@class, 'css-1qw96cp')]/p[text()='" + productName + "']//following-sibling::p"))
					.getText();
			String imgSrc = driver.findElement(By.xpath("//div[contains(@class, 'css-s18byi')]/img")).getAttribute("src");
			System.out.println("price: " + price);
			System.out.println("Src: " + imgSrc);
		} catch (Exception e) {
			// TODO: handle exception
		}
	}

	public static void main(String[] args) {
		WebDriver driver = createDriver();
		String input = String.join(" ", args);
		try {
			printQkartLoadingtime(driver);
			GetProductImageandUrl(driver, input);
		} catch (Exception e) {
			// TODO: handle exception
		} finally {
			driver.quit();
		}
	}
}
